/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import model.IModel;
import model.Kerdes;

/**
 *
 * @author Frigyes
 */
public class KerdesekDialog extends javax.swing.JDialog {

    private IModel model;
    private java.awt.Frame parent;

    private void listaFeltolt() {
        try {
            List<Kerdes> kerdesek = model.getAllKerdesek();
            jlKerdesek.setListData(kerdesek.toArray());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
        }
    }

    public KerdesekDialog(java.awt.Frame parent, boolean modal, IModel model) {
        super(parent, modal);
        this.model = model;
        initComponents();
        setTitle("Kérdések");
        setLocationRelativeTo(parent);
        listaFeltolt();
        rootPane.setDefaultButton(btnOk);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlKerdesek = new javax.swing.JList();
        btnUj = new javax.swing.JButton();
        btnModosit = new javax.swing.JButton();
        btnTorol = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jlKerdesek);

        btnUj.setText("Új");
        btnUj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUjActionPerformed(evt);
            }
        });

        btnModosit.setText("Módosít");
        btnModosit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModositActionPerformed(evt);
            }
        });

        btnTorol.setText("Töröl");
        btnTorol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTorolActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUj)
                    .addComponent(btnModosit)
                    .addComponent(btnOk)
                    .addComponent(btnTorol))
                .addGap(58, 58, 58))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnModosit, btnOk, btnTorol, btnUj});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUj)
                        .addGap(18, 18, 18)
                        .addComponent(btnModosit)
                        .addGap(18, 18, 18)
                        .addComponent(btnTorol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 590, Short.MAX_VALUE)
                        .addComponent(btnOk))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTorolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorolActionPerformed
        Kerdes selected = (Kerdes) jlKerdesek.getSelectedValue();
        if (selected != null) {
            int valasz = JOptionPane.showConfirmDialog(rootPane, "Biztos törlöd?", "Megerősítés", JOptionPane.YES_NO_OPTION);
            if (valasz == JOptionPane.YES_OPTION) {
                try {
                    model.RemoveKerdes(selected);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
                }
            }
            listaFeltolt();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Válasszon ki egy kérdést a törléshez!", "Kiválasztás hiba", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTorolActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnUjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUjActionPerformed
        KerdesAdatokDialog kad = new KerdesAdatokDialog(parent, true, null);
        kad.setVisible(true);

        if (kad.isMentes()) {
            Kerdes kerdes = kad.getKerdes();
            try {
                model.AddKerdes(kerdes);
                listaFeltolt();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Nem sikerült menteni", "Mentési hiba", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUjActionPerformed

    private void btnModositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModositActionPerformed
        Kerdes selected = (Kerdes) jlKerdesek.getSelectedValue();
        if (selected != null) {
            KerdesAdatokDialog kad = new KerdesAdatokDialog(parent, rootPaneCheckingEnabled, selected);
            kad.setVisible(true);
            if (kad.isMentes()) {
                try {
                    model.UpdateKerdes(selected);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
                }
                listaFeltolt();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Válassz ki egy kérdést a szerkesztéshez", "Kiválasztás hiba", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnModositActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModosit;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnTorol;
    private javax.swing.JButton btnUj;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jlKerdesek;
    // End of variables declaration//GEN-END:variables
}
